/**
 * Customize default theme styling by overriding CSS variables:
 * https://github.com/vuejs/vitepress/blob/main/src/client/theme-default/styles/vars.css
 */

/**
 * Colors
 *
 * Each colors have exact same color scale system with 3 levels of solid
 * colors with different brightness, and 1 soft color.
 *
 * - `XXX-1`: The most solid color used mainly for colored text. It must
 *   satisfy the contrast ratio against when used on top of `XXX-soft`.
 *
 * - `XXX-2`: The color used mainly for hover state of the button.
 *
 * - `XXX-3`: The color for solid background, such as bg color of the button.
 *   It must satisfy the contrast ratio with pure white (#ffffff) text on
 *   top of it.
 *
 * - `XXX-soft`: The color used for subtle background such as custom container
 *   or badges. It must satisfy the contrast ratio when putting `XXX-1` colors
 *   on top of it.
 *
 *   The soft color must be semi transparent alpha channel. This is crucial
 *   because it allows adding multiple "soft" colors on top of each other
 *   to create a accent, such as when having inline code block inside
 *   custom containers.
 *
 * - `default`: The color used purely for subtle indication without any
 *   special meanings attched to it such as bg color for menu hover state.
 *
 * - `brand`: Used for primary brand colors, such as link text, button with
 *   brand theme, etc.
 *
 * - `tip`: Used to indicate useful information. The default theme uses the
 *   brand color for this by default.
 *
 * - `warning`: Used to indicate warning to the users. Used in custom
 *   container, badges, etc.
 *
 * - `danger`: Used to show error, or dangerous message to the users. Used
 *   in custom container, badges, etc.
 * -------------------------------------------------------------------------- */

/**
 * Palette 2: Forest Green & Gentle Peach
 */

:root {
  /* Brand: Forest Green */
  --vp-c-brand-1: #256d45;   /* Deeper, more legible green */
  --vp-c-brand-2: #34a76e;   /* Brighter hover green */
  --vp-c-brand-3: #2e8c5a;   /* Solid button green */
  --vp-c-brand-soft: #2ecc714d; /* ~30% opacity */
}


.dark {
  /* Brand: Forest Green (Adjusted for Dark Mode) */
  --vp-c-brand-1: #58d68d;  /* Lighter Green for text */
  --vp-c-brand-2: #2ecc71;  /* Medium Bright Green */
  --vp-c-brand-3: #27ae60;  /* Solid Green */
  --vp-c-brand-soft: #2ecc7126;
}

/* Alias definitions (should be consistent) */
:root, .dark {
  --vp-c-default-1: var(--vp-c-gray-1);
  --vp-c-default-2: var(--vp-c-gray-2);
  --vp-c-default-3: var(--vp-c-gray-3);
  --vp-c-default-soft: var(--vp-c-gray-soft);
}

kbd {
  background-color: var(--vp-c-bg-alt);
  border: 1px solid var(--vp-c-divider);
  border-radius: 4px;
  box-shadow: inset 0 -1px 0 var(--vp-c-divider);
  padding: 2px 6px;
  font-size: 0.85em;
  font-family: var(--vp-font-family-mono);
}

/* PrimeVue override */

/* Fix sticky header on scroll */
.vp-doc table.p-datatable-table {
    display: table !important; /* Crucial: Restore table display context */
    overflow-x: unset !important;        /* PrimeVue's .p-datatable-table-container handles scrolling */
}